utils.jq((()=>{Array.from(document.getElementsByClassName("ds-memos")).forEach((e=>{const s=e.getAttribute("api");if(!s)return;const t=e.getAttribute("avatar")||def.avatar,a=e.getAttribute("limit"),i=s.match(/https:\/\/(.*?)\/(.*)/i)[1];utils.request(e,s,(async s=>{let n=r.identify(s);if("feature"===n.version)return;const l=e.getAttribute("user")?.split(",")||[],u=e.getAttribute("hide")?.split(",")||[];await Promise.all(n.data.slice(0,a||n.data.length).map((s=>async function(e,s,t,a,i,n){const l=r[s.version]||r.feature;return`<div class="timenode">\n                      <div class="header">${t.length||a.includes("user")?"":await l.buildUser(e,s,i)}\n                      <span>${l.buildDate(e).toLocaleString()}</span></div>\n                      <div class="body">${marked.parse(e.content||"")}\n                      <div class="tag-plugin image">${l.buildImages(e,n).join("")}</div>\n                      </div></div>`}(s,n,l,u,t,i).then((s=>$(e).append(s))))))}));const r={"22-":{buildUser:async(e,s,t)=>`<div class="user-info">${t?`<img src="${t}">`:""}<span>${e.creatorName}</span></div>`,buildDate:e=>new Date(1e3*e.createdTs),buildImages:(e,s)=>(e.resourceList||[]).filter((e=>e.type?.includes("image/"))).map((e=>`<div class="image-bg"><img src="${e.externalLink||`https://${s}/o/r/${e.id}`}"></div>`))},"22+":{buildUser:async(e,s,t)=>{const a=e?.creator.split("/")[1];let i=s.users.find((e=>e.id===parseInt(a)));i||(s.requests[a]||(s.requests[a]=fetch(`${s.site}/api/v1/users/${a}`).then((e=>e.json())).then((e=>{e.username?(i=e,s.users.push(e)):i=null})).finally((()=>delete s.requests[a]))),await s.requests[a],i=s.users.find((e=>e.id===parseInt(a))));const r=i?i.nickname||i.username:"memos",n=i?.avatarUrl?`${s.site}${i.avatarUrl}`:t||"";return`<div class="user-info">${n?`<img src="${n}">`:""}<span>${r}</span></div>`},buildDate:e=>new Date(e.createTime),buildImages:e=>(e.resources||[]).filter((e=>e.type?.includes("image/"))).map((e=>`<div class="image-bg"><img src="${e.externalLink||`https://${i}/o/r/${e.id}`}"></div>`))},feature:{buildUser:async()=>"memos",buildDate:()=>new Date,buildImages:()=>[]},identify:e=>{let t={version:"feature",users:[],site:s.split("/api/v1")[0],requests:{},data:[]};return Array.isArray(e)?(t.version="22-",t.data=e):e.memos?(t.version="22+",t.data=e.memos):(t.version="feature",console.log("当前Memos版本过高，请到Stellar社区反馈")),t}}}))}));